name: Build

on:
  push:
    branches:
      - "*"
  pull_request:
    branches:
      - main

env:
  JAVA_VERSION: 21

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Build with Gradle
        run: ./gradlew build jreleaserAssemble publishToMavenLocal

      - name: Run zpa-checks integration tests
        run: |
          ./gradlew :zpa-checks:integrationTest --rerun
          cat zpa-checks/build/integrationTest/progress-summary.md >> $GITHUB_STEP_SUMMARY

      - name: Build custom rules example
        run: ./gradlew build -p plsql-custom-rules

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-artifacts
          path: |
            **/build/
            zpa-checks/tools/
          retention-days: 1

  integration-tests:
    name: IT
    needs: build
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sqVersion:
          - 25.4.0.105899
          - 25.5.0.107428
          - 25.6.0.109173
          - 25.7.0.110598
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - if: ${{ !contains(matrix.sqVersion, 'SNAPSHOT') }}
        name: Run plugin integration test
        run: |
          curl -s -L "https://nexus.felipezorzo.com.br/service/rest/v1/search/assets/download?repository=maven-releases&maven.groupId=org.sonarsource.sonarqube&maven.artifactId=sonar-application&maven.extension=zip&sort=version&maven.baseVersion=${{ matrix.sqVersion }}" \
            -u "$AUTH_REPOSITORY" \
            -o sonar-zpa-plugin/sonar-application-${{ matrix.sqVersion }}.zip
          ./gradlew :sonar-zpa-plugin:integrationTest -Dsonar.zipFile=sonar-application-${{ matrix.sqVersion }}.zip --rerun --info
        env:
          AUTH_REPOSITORY: ${{ secrets.AUTH_REPOSITORY }}

      - if: ${{ contains(matrix.sqVersion, 'SNAPSHOT') }}
        name: Run plugin integration test
        run: |
          curl -s -L "https://nexus.felipezorzo.com.br/service/rest/v1/search/assets/download?repository=maven-snapshots&maven.groupId=org.sonarsource.sonarqube&maven.artifactId=sonar-application&maven.extension=zip&sort=version&maven.baseVersion=${{ matrix.sqVersion }}" \
            -u "$AUTH_REPOSITORY" \
            -o sonar-zpa-plugin/sonar-application-${{ matrix.sqVersion }}.zip
          ./gradlew :sonar-zpa-plugin:integrationTest -Dsonar.zipFile=sonar-application-${{ matrix.sqVersion }}.zip --rerun --info
        env:
          AUTH_REPOSITORY: ${{ secrets.AUTH_REPOSITORY }}

  release:
    name: Release
    needs: integration-tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-artifacts

      - name: Generate plsql-custom-rules archive
        run: git archive --format=zip -o build/plsql-custom-rules.zip HEAD:plsql-custom-rules

      - name: Create local Maven repository
        run: ./gradlew publish

      - if: github.ref == 'refs/heads/main'
        name: Run SonarQube Scanner
        run: ./gradlew sonar --info
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}

      - if: github.ref == 'refs/heads/main'
        name: Release artifacts
        run: ./gradlew jreleaserFullRelease
        env:
          JRELEASER_MAVENCENTRAL_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_MAVENCENTRAL_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          JRELEASER_NEXUS2_USERNAME: ${{ secrets.MAVEN_USERNAME }}
          JRELEASER_NEXUS2_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_KEY_PASSWORD }}

  dependency-submission:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4

      - name: Generate and submit dependency graph
        uses: gradle/actions/dependency-submission@v4
