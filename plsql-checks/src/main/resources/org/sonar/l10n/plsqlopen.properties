rule.plsql.AddParenthesesInNestedExpression.message=Add parentheses around this AND condition to make the operator precedence explicit.
rule.plsql.AddParenthesesInNestedExpression.name=Add parentheses in nested expression
rule.plsql.CharacterDatatypeUsage.message=Use VARCHAR2 instead of {0}.
rule.plsql.CharacterDatatypeUsage.name=Use VARCHAR2 instead of CHAR and VARCHAR
rule.plsql.CollapsibleIfStatements.message=This IF statement can be merged with the enclosing one.
rule.plsql.CollapsibleIfStatements.name=Collapsible "if" statements should be merged
rule.plsql.ColumnsShouldHaveTableName.message=Specify the table of column "{0}".
rule.plsql.ColumnsShouldHaveTableName.name=The columns in a SELECT should be prefixed with table name
rule.plsql.CommitRollback.message=Avoid {0} calls unless it is in an autonomous transaction.
rule.plsql.CommitRollback.name=Avoid COMMIT/ROLLBACK calls in database objects
rule.plsql.ComparisonWithBoolean.message=Remove the literal "{0}" of this comparison.
rule.plsql.ComparisonWithBoolean.name=Avoid superfluous comparation against boolean literals
rule.plsql.ComparisonWithNull.message=Fix this comparison or change to "{0}".
rule.plsql.ComparisonWithNull.name=Do not compare values against the NULL literal or an empty string
rule.plsql.ConcatenationWithNull.message=Review this concatenation with NULL value.
rule.plsql.ConcatenationWithNull.name=Unnecessary concatenation with NULL value
rule.plsql.CursorBodyInPackageSpec.message=Move the body of the cursor "{0}" to the package body.
rule.plsql.CursorBodyInPackageSpec.name=Do not declare cursor bodies in a package specification
rule.plsql.DbmsOutputPut.message=Avoid direct calls to DBMS_OUTPUT procedures.
rule.plsql.DbmsOutputPut.name=Avoid direct calls to DBMS_OUTPUT procedures
rule.plsql.DeadCode.message=This code will never be executed.
rule.plsql.DeadCode.name=Dead code should be removed
rule.plsql.DeclareSectionWithoutDeclarations.message=Remove this DECLARE keyword.
rule.plsql.DeclareSectionWithoutDeclarations.name=Do not add the DECLARE keyword if the block doesn't have any declaration
rule.plsql.DuplicateConditionIfElsif.message=This code can not be reached because the condition duplicates a previous condition in the same sequence of "if/else if" statements.
rule.plsql.DuplicateConditionIfElsif.name=Related "if/elsif" statements should not have the same condition
rule.plsql.DuplicatedValueInIn.message=Remove or fix the duplicated value "{0}" in the IN condition.
rule.plsql.DuplicatedValueInIn.name=Duplicated value in an IN condition
rule.plsql.EmptyBlock.message=Either remove or fill this block of code.
rule.plsql.EmptyBlock.name=Empty blocks should be removed
rule.plsql.EmptyStringAssignment.message=Replace this empty string by NULL.
rule.plsql.EmptyStringAssignment.name=Avoid using empty strings to represent NULL
rule.plsql.ExplicitInParameter.message=Explicitly declare this parameter as IN.
rule.plsql.ExplicitInParameter.name=Parameter mode should be explicitly declared
rule.plsql.FunctionWithOutParameter.message=Rewrite this function to not depend on OUT parameters.
rule.plsql.FunctionWithOutParameter.name=Avoid functions with OUT parameters
rule.plsql.IdenticalExpression.message=Identical expressions on both sides of operator "{0}".
rule.plsql.IdenticalExpression.name=Identical expressions should not be used on both sides of an operator
rule.plsql.IfWithExit.message=Replace this IF ... EXIT by a EXIT WHEN statement.
rule.plsql.IfWithExit.name=Use EXIT WHEN instead of an IF statement to exit from a loop
rule.plsql.InequalityUsage.message=Replace "%s" by "<>".
rule.plsql.InequalityUsage.name=Only "<>" should be used to test inequality
rule.plsql.InsertWithoutColumns.message=Specify the columns in this INSERT.
rule.plsql.InsertWithoutColumns.name=Always specify the columns in an INSERT statement
rule.plsql.InvalidReferenceToObject.message=Invalid reference to the object "{0}" in this {1} call.
rule.plsql.InvalidReferenceToObject.name=Invalid reference to Oracle Forms object
rule.plsql.NotASelectedExpression.message=This value does not exists in the SELECT clause. Fix this expression or add this value in the SELECT.
rule.plsql.NotASelectedExpression.name=ORDER BY items must appear in the select list if SELECT DISTINCT is specified
rule.plsql.NotFound.message=Use %NOTFOUND instead of NOT ...%FOUND.
rule.plsql.NotFound.name=Use cursor%NOTFOUND instead of NOT cursor%FOUND
rule.plsql.NvlWithNullParameter.message=This NVL does not have any effect. Fix the {0} parameter or remove this NVL.
rule.plsql.NvlWithNullParameter.name=Do not pass a NULL literal or an empty string to NVL
rule.plsql.ParsingError.name=Parser failure
rule.plsql.QueryWithoutExceptionHandling.message=Handle exceptions of this query.
rule.plsql.QueryWithoutExceptionHandling.name=Avoid queries without an exception handling block
rule.plsql.QueryWithoutExceptionHandling.param.strictMode=If false, allows inner block without exception handling.
rule.plsql.RaiseStandardException.message=Avoid raising the standard exception {0}.
rule.plsql.RaiseStandardException.name=Avoid raising standard exceptions
rule.plsql.ReturnOfBooleanExpression.message=Replace this if-then-else statement by a single return statement.
rule.plsql.ReturnOfBooleanExpression.name=Return of boolean expressions should not be wrapped into an "if-then-else" statement
rule.plsql.SameBranch.message=Either merge this branch with the identical one on line {0} or change one of the implementations.
rule.plsql.SameBranch.name=Branches in the same conditional structure should not have exactly the same implementation
rule.plsql.SameCondition.message=This condition duplicates the one on line {0}.
rule.plsql.SameCondition.name=Identical conditions should not be duplicated
rule.plsql.SelectAllColumns.message=SELECT * should not be used.
rule.plsql.SelectAllColumns.name=SELECT * should not be used
rule.plsql.SelectWithRownumAndOrderBy.message=Move this ROWNUM comparation to a more external level to guarantee the ordering.
rule.plsql.SelectWithRownumAndOrderBy.name=A SELECT cannot have a comparison with ROWNUM and an ORDER BY at the same level
rule.plsql.ToDateWithoutFormat.message=Specify the date format in this TO_DATE.
rule.plsql.ToDateWithoutFormat.name=TO_DATE without date format
rule.plsql.TooManyRowsHandler.message=Handle the variables used in the SELECT INTO statements here so their values do not become undefined.
rule.plsql.TooManyRowsHandler.name=Avoid masking the TOO_MANY_ROWS exception
rule.plsql.UnhandledUserDefinedException.message=There is not a exception handler for "{0}" here. This will cause a "user-defined exception" error.
rule.plsql.UnhandledUserDefinedException.name=User defined exceptions should be handled
rule.plsql.UnnecessaryAliasInQuery.message=This statement has only one reference to the table "{0}". Remove the alias "{1}" to improve the readability.
rule.plsql.UnnecessaryAliasInQuery.name=Unnecessary alias for table reference
rule.plsql.UnnecessaryAliasInQuery.param.acceptedLength=Ignore alias with size greater than or equals to this
rule.plsql.UnnecessaryElse.message=This ELSE can be replaced by an END IF. When the corresponding IF is executed, the code execution will be stopped. Either way, the code within this ELSE will always run, regardless of the ELSE block.
rule.plsql.UnnecessaryElse.name=Unnecessary ELSE clause
rule.plsql.UnnecessaryNullStatement.message=This NULL statement does not have any effect here.
rule.plsql.UnnecessaryNullStatement.name=Unnecessary NULL statement
rule.plsql.UnusedCursor.message=Remove this unused "{0}" cursor.
rule.plsql.UnusedCursor.name=Unused cursors should be removed
rule.plsql.UnusedParameter.message=Remove this unused "{0}" parameter.
rule.plsql.UnusedParameter.name=Unused parameters should be removed
rule.plsql.UnusedVariable.message=Remove this unused "{0}" local variable.
rule.plsql.UnusedVariable.name=Unused local variables should be removed
rule.plsql.UselessParenthesis.message=Remove those useless parenthesis.
rule.plsql.UselessParenthesis.name=Useless parentheses around expressions should be removed to prevent any misunderstanding
rule.plsql.VariableHiding.message=This variable "{0}" hides the declaration on line {1}.
rule.plsql.VariableHiding.name=Do not redeclare variables in inner scope
rule.plsql.VariableInCount.message=Looks like there is a "{0}" variable in this context. Review if this COUNT is correct.
rule.plsql.VariableInCount.name=Don't pass variables to COUNT function
rule.plsql.VariableInitializationWithFunctionCall.message=Move this initialization to the BEGIN...END block.
rule.plsql.VariableInitializationWithFunctionCall.name=Avoid initializing variables using functions in the declaration section
rule.plsql.VariableInitializationWithNull.message=Remove this unnecessary initialization to NULL.
rule.plsql.VariableInitializationWithNull.name=Variables and RECORD fields do not need to be initialized with NULL
